// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: webfont.proto

package io.grpc.sdk.webfont;

/**
 * Protobuf type {@code webfontsdk.FontBuildAccessKeyRequest}
 */
public  final class FontBuildAccessKeyRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:webfontsdk.FontBuildAccessKeyRequest)
    FontBuildAccessKeyRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FontBuildAccessKeyRequest.newBuilder() to construct.
  private FontBuildAccessKeyRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FontBuildAccessKeyRequest() {
    apikey_ = "";
    accesskey_ = "";
    text_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FontBuildAccessKeyRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FontBuildAccessKeyRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            apikey_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            accesskey_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            text_ = s;
            break;
          }
          case 32: {

            needTtf_ = input.readBool();
            break;
          }
          case 40: {

            needEot_ = input.readBool();
            break;
          }
          case 48: {

            needWoff_ = input.readBool();
            break;
          }
          case 56: {

            needWoff2_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grpc.sdk.webfont.WebfontProto.internal_static_webfontsdk_FontBuildAccessKeyRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grpc.sdk.webfont.WebfontProto.internal_static_webfontsdk_FontBuildAccessKeyRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grpc.sdk.webfont.FontBuildAccessKeyRequest.class, io.grpc.sdk.webfont.FontBuildAccessKeyRequest.Builder.class);
  }

  public static final int APIKEY_FIELD_NUMBER = 1;
  private volatile java.lang.Object apikey_;
  /**
   * <code>string apikey = 1;</code>
   */
  public java.lang.String getApikey() {
    java.lang.Object ref = apikey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      apikey_ = s;
      return s;
    }
  }
  /**
   * <code>string apikey = 1;</code>
   */
  public com.google.protobuf.ByteString
      getApikeyBytes() {
    java.lang.Object ref = apikey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      apikey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACCESSKEY_FIELD_NUMBER = 2;
  private volatile java.lang.Object accesskey_;
  /**
   * <code>string accesskey = 2;</code>
   */
  public java.lang.String getAccesskey() {
    java.lang.Object ref = accesskey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      accesskey_ = s;
      return s;
    }
  }
  /**
   * <code>string accesskey = 2;</code>
   */
  public com.google.protobuf.ByteString
      getAccesskeyBytes() {
    java.lang.Object ref = accesskey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      accesskey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TEXT_FIELD_NUMBER = 3;
  private volatile java.lang.Object text_;
  /**
   * <code>string text = 3;</code>
   */
  public java.lang.String getText() {
    java.lang.Object ref = text_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      text_ = s;
      return s;
    }
  }
  /**
   * <code>string text = 3;</code>
   */
  public com.google.protobuf.ByteString
      getTextBytes() {
    java.lang.Object ref = text_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      text_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEED_TTF_FIELD_NUMBER = 4;
  private boolean needTtf_;
  /**
   * <code>bool need_ttf = 4;</code>
   */
  public boolean getNeedTtf() {
    return needTtf_;
  }

  public static final int NEED_EOT_FIELD_NUMBER = 5;
  private boolean needEot_;
  /**
   * <code>bool need_eot = 5;</code>
   */
  public boolean getNeedEot() {
    return needEot_;
  }

  public static final int NEED_WOFF_FIELD_NUMBER = 6;
  private boolean needWoff_;
  /**
   * <code>bool need_woff = 6;</code>
   */
  public boolean getNeedWoff() {
    return needWoff_;
  }

  public static final int NEED_WOFF2_FIELD_NUMBER = 7;
  private boolean needWoff2_;
  /**
   * <code>bool need_woff2 = 7;</code>
   */
  public boolean getNeedWoff2() {
    return needWoff2_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getApikeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, apikey_);
    }
    if (!getAccesskeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accesskey_);
    }
    if (!getTextBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, text_);
    }
    if (needTtf_ != false) {
      output.writeBool(4, needTtf_);
    }
    if (needEot_ != false) {
      output.writeBool(5, needEot_);
    }
    if (needWoff_ != false) {
      output.writeBool(6, needWoff_);
    }
    if (needWoff2_ != false) {
      output.writeBool(7, needWoff2_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getApikeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, apikey_);
    }
    if (!getAccesskeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, accesskey_);
    }
    if (!getTextBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, text_);
    }
    if (needTtf_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, needTtf_);
    }
    if (needEot_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, needEot_);
    }
    if (needWoff_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, needWoff_);
    }
    if (needWoff2_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, needWoff2_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.grpc.sdk.webfont.FontBuildAccessKeyRequest)) {
      return super.equals(obj);
    }
    io.grpc.sdk.webfont.FontBuildAccessKeyRequest other = (io.grpc.sdk.webfont.FontBuildAccessKeyRequest) obj;

    if (!getApikey()
        .equals(other.getApikey())) return false;
    if (!getAccesskey()
        .equals(other.getAccesskey())) return false;
    if (!getText()
        .equals(other.getText())) return false;
    if (getNeedTtf()
        != other.getNeedTtf()) return false;
    if (getNeedEot()
        != other.getNeedEot()) return false;
    if (getNeedWoff()
        != other.getNeedWoff()) return false;
    if (getNeedWoff2()
        != other.getNeedWoff2()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + APIKEY_FIELD_NUMBER;
    hash = (53 * hash) + getApikey().hashCode();
    hash = (37 * hash) + ACCESSKEY_FIELD_NUMBER;
    hash = (53 * hash) + getAccesskey().hashCode();
    hash = (37 * hash) + TEXT_FIELD_NUMBER;
    hash = (53 * hash) + getText().hashCode();
    hash = (37 * hash) + NEED_TTF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedTtf());
    hash = (37 * hash) + NEED_EOT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedEot());
    hash = (37 * hash) + NEED_WOFF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedWoff());
    hash = (37 * hash) + NEED_WOFF2_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNeedWoff2());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grpc.sdk.webfont.FontBuildAccessKeyRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code webfontsdk.FontBuildAccessKeyRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:webfontsdk.FontBuildAccessKeyRequest)
      io.grpc.sdk.webfont.FontBuildAccessKeyRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grpc.sdk.webfont.WebfontProto.internal_static_webfontsdk_FontBuildAccessKeyRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grpc.sdk.webfont.WebfontProto.internal_static_webfontsdk_FontBuildAccessKeyRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grpc.sdk.webfont.FontBuildAccessKeyRequest.class, io.grpc.sdk.webfont.FontBuildAccessKeyRequest.Builder.class);
    }

    // Construct using io.grpc.sdk.webfont.FontBuildAccessKeyRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      apikey_ = "";

      accesskey_ = "";

      text_ = "";

      needTtf_ = false;

      needEot_ = false;

      needWoff_ = false;

      needWoff2_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grpc.sdk.webfont.WebfontProto.internal_static_webfontsdk_FontBuildAccessKeyRequest_descriptor;
    }

    @java.lang.Override
    public io.grpc.sdk.webfont.FontBuildAccessKeyRequest getDefaultInstanceForType() {
      return io.grpc.sdk.webfont.FontBuildAccessKeyRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.grpc.sdk.webfont.FontBuildAccessKeyRequest build() {
      io.grpc.sdk.webfont.FontBuildAccessKeyRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grpc.sdk.webfont.FontBuildAccessKeyRequest buildPartial() {
      io.grpc.sdk.webfont.FontBuildAccessKeyRequest result = new io.grpc.sdk.webfont.FontBuildAccessKeyRequest(this);
      result.apikey_ = apikey_;
      result.accesskey_ = accesskey_;
      result.text_ = text_;
      result.needTtf_ = needTtf_;
      result.needEot_ = needEot_;
      result.needWoff_ = needWoff_;
      result.needWoff2_ = needWoff2_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grpc.sdk.webfont.FontBuildAccessKeyRequest) {
        return mergeFrom((io.grpc.sdk.webfont.FontBuildAccessKeyRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grpc.sdk.webfont.FontBuildAccessKeyRequest other) {
      if (other == io.grpc.sdk.webfont.FontBuildAccessKeyRequest.getDefaultInstance()) return this;
      if (!other.getApikey().isEmpty()) {
        apikey_ = other.apikey_;
        onChanged();
      }
      if (!other.getAccesskey().isEmpty()) {
        accesskey_ = other.accesskey_;
        onChanged();
      }
      if (!other.getText().isEmpty()) {
        text_ = other.text_;
        onChanged();
      }
      if (other.getNeedTtf() != false) {
        setNeedTtf(other.getNeedTtf());
      }
      if (other.getNeedEot() != false) {
        setNeedEot(other.getNeedEot());
      }
      if (other.getNeedWoff() != false) {
        setNeedWoff(other.getNeedWoff());
      }
      if (other.getNeedWoff2() != false) {
        setNeedWoff2(other.getNeedWoff2());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grpc.sdk.webfont.FontBuildAccessKeyRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grpc.sdk.webfont.FontBuildAccessKeyRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object apikey_ = "";
    /**
     * <code>string apikey = 1;</code>
     */
    public java.lang.String getApikey() {
      java.lang.Object ref = apikey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apikey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string apikey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getApikeyBytes() {
      java.lang.Object ref = apikey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apikey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string apikey = 1;</code>
     */
    public Builder setApikey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      apikey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string apikey = 1;</code>
     */
    public Builder clearApikey() {
      
      apikey_ = getDefaultInstance().getApikey();
      onChanged();
      return this;
    }
    /**
     * <code>string apikey = 1;</code>
     */
    public Builder setApikeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      apikey_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object accesskey_ = "";
    /**
     * <code>string accesskey = 2;</code>
     */
    public java.lang.String getAccesskey() {
      java.lang.Object ref = accesskey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accesskey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string accesskey = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAccesskeyBytes() {
      java.lang.Object ref = accesskey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accesskey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string accesskey = 2;</code>
     */
    public Builder setAccesskey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      accesskey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string accesskey = 2;</code>
     */
    public Builder clearAccesskey() {
      
      accesskey_ = getDefaultInstance().getAccesskey();
      onChanged();
      return this;
    }
    /**
     * <code>string accesskey = 2;</code>
     */
    public Builder setAccesskeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      accesskey_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object text_ = "";
    /**
     * <code>string text = 3;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string text = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string text = 3;</code>
     */
    public Builder setText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      text_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string text = 3;</code>
     */
    public Builder clearText() {
      
      text_ = getDefaultInstance().getText();
      onChanged();
      return this;
    }
    /**
     * <code>string text = 3;</code>
     */
    public Builder setTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      text_ = value;
      onChanged();
      return this;
    }

    private boolean needTtf_ ;
    /**
     * <code>bool need_ttf = 4;</code>
     */
    public boolean getNeedTtf() {
      return needTtf_;
    }
    /**
     * <code>bool need_ttf = 4;</code>
     */
    public Builder setNeedTtf(boolean value) {
      
      needTtf_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool need_ttf = 4;</code>
     */
    public Builder clearNeedTtf() {
      
      needTtf_ = false;
      onChanged();
      return this;
    }

    private boolean needEot_ ;
    /**
     * <code>bool need_eot = 5;</code>
     */
    public boolean getNeedEot() {
      return needEot_;
    }
    /**
     * <code>bool need_eot = 5;</code>
     */
    public Builder setNeedEot(boolean value) {
      
      needEot_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool need_eot = 5;</code>
     */
    public Builder clearNeedEot() {
      
      needEot_ = false;
      onChanged();
      return this;
    }

    private boolean needWoff_ ;
    /**
     * <code>bool need_woff = 6;</code>
     */
    public boolean getNeedWoff() {
      return needWoff_;
    }
    /**
     * <code>bool need_woff = 6;</code>
     */
    public Builder setNeedWoff(boolean value) {
      
      needWoff_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool need_woff = 6;</code>
     */
    public Builder clearNeedWoff() {
      
      needWoff_ = false;
      onChanged();
      return this;
    }

    private boolean needWoff2_ ;
    /**
     * <code>bool need_woff2 = 7;</code>
     */
    public boolean getNeedWoff2() {
      return needWoff2_;
    }
    /**
     * <code>bool need_woff2 = 7;</code>
     */
    public Builder setNeedWoff2(boolean value) {
      
      needWoff2_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool need_woff2 = 7;</code>
     */
    public Builder clearNeedWoff2() {
      
      needWoff2_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:webfontsdk.FontBuildAccessKeyRequest)
  }

  // @@protoc_insertion_point(class_scope:webfontsdk.FontBuildAccessKeyRequest)
  private static final io.grpc.sdk.webfont.FontBuildAccessKeyRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grpc.sdk.webfont.FontBuildAccessKeyRequest();
  }

  public static io.grpc.sdk.webfont.FontBuildAccessKeyRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FontBuildAccessKeyRequest>
      PARSER = new com.google.protobuf.AbstractParser<FontBuildAccessKeyRequest>() {
    @java.lang.Override
    public FontBuildAccessKeyRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FontBuildAccessKeyRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FontBuildAccessKeyRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FontBuildAccessKeyRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grpc.sdk.webfont.FontBuildAccessKeyRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

